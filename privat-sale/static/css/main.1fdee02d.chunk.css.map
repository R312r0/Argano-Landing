{"version":3,"sources":["webpack://src/index.scss","webpack://src/app.scss","webpack://src/breakpoints.scss"],"names":[],"mappings":"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","file":"main.1fdee02d.chunk.css","sourcesContent":["@font-face {\n  font-family: 'Popins';\n  src: local('Popins'), url(font/Poppins-Regular.ttf) format('truetype');\n}\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  font-family: Popins !important;\n  box-sizing: border-box;\n  background: linear-gradient(128.93deg, #282828 -28.09%, #151515 101.36%);\n}\n#root {\n  height: 100%;\n}\n\nh1, h2, h3, h4, h5, h6, p {\n  margin: 0;\n}\n\n$breakpoints: (\n  \"phone\": 360px,\n  \"tablet\": 768px,\n  \"desktop\": 1366px,\n  \"LGdesktop\": 1920px\n)","@import './breakpoints.scss';\n\n.app {\n    display: grid;\n    height: clamp(768px, 100%, 2200px);\n    grid-template-rows: 15% 15% 40% 30%;\n    @include media('>large') {\n        grid-template-rows: 15% 15% 40% 30%;\n        height: clamp(1600px, 100%, 2200px);\n\n    }\n    @include media('<desktop'){\n        grid-template-rows: 20% 10% 35% 35%;\n    }\n    @include media('<tablet') {\n        grid-template-rows: 15% 10% 40% 35%;\n    }\n\n    box-sizing: border-box;\n    padding: 2.5% 6.75%;\n    &__header {\n        display: grid;\n        grid-template-columns: 1fr 2fr 1fr;\n        @include media('<desktop'){\n            grid-template-columns: 1fr 3fr 1fr;\n            align-items: center;\n        }\n        @include media('<tablet') {\n            grid-template-columns: 1fr 2fr;\n            grid-template-rows: 1fr 2fr;\n        }\n        img {\n            width: 20%;\n            height: 50%;\n\n            @include media('<desktop'){\n                width: 50px;\n                height: 50px;\n            }\n            @include media('<tablet') {\n                width: 35px;\n                height: 35px;\n                order: 1;\n                align-self: flex-end;\n            }\n            justify-self: center;\n        }\n        &__timer {\n            width: 80%;\n            height: 100%;\n            @include media('<desktop'){\n                height: 50%;\n                width: 95%;\n                align-self: flex-end;\n                border-radius: 25px;\n            }\n            @include media('<tablet') {\n                grid-column: 1/3;\n                order: 3;\n                height: 80%;\n                width: 95%;\n                align-self: flex-end;\n            }\n            justify-self: center;\n            background: radial-gradient(61.16% 3404.86% at 48.28% 79.61%, rgba(30, 117, 89, 0.3) 0%, rgba(9, 33, 25, 0.3) 100%), linear-gradient(90.99deg, #272727 2.18%, #1C1C1C 104.4%);\n            box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.25);\n            border-radius: 40px;\n            display: grid;\n            grid-template-columns: repeat(4, 1fr);\n            place-items: center;\n            &__time {\n                width: 100%;\n                height: 100%;\n                @include media('<desktop') {\n                    font-size: 12px;\n                }\n                position: relative;\n                display: grid;\n                grid-template-rows: 2fr 1fr;\n                grid-row-gap: 5px;\n                place-items: center;\n                .divider {\n                    position: absolute;\n                    right: 0;\n                    top: 30%;\n                    font-size: 1.25vw;\n                    @include media('<tablet') {\n                        font-size: 12px;\n                    }\n                    font-weight: 900;\n                }\n                div {\n                    @include media('<desktop') {\n                        font-size: 18px;\n                    }\n                    @include media('<tablet') {\n                        font-size: 12px;\n                    }\n                    background: #1E1E1E;\n                    border-radius: 20px;\n                    color: #40BA93;\n                    width: 55%;\n                    height: 70%;\n                    display: grid;\n                    justify-self: center;\n                    align-self: flex-end;\n                    place-items: center;\n                    font-size: 1.25vw;\n                }\n                span {\n                    align-self: flex-start;\n                    color: white;\n                    font-size: 1vw;\n                    @include media('<desktop') {\n                        font-size: 14px;\n                        align-self: center;\n                    }\n                    @include media('<tablet') {\n                        font-size: 10px;\n                    }\n\n                }\n            }\n        }\n        button {\n            a {\n                color: white;\n                @include media('<desktop'){\n                    font-size: 12px;\n                }\n            }\n            width: 42.5%;\n            height: 35%;\n            @include media('<desktop'){\n                width: 60%;\n                height: 15%;\n                border-radius: 25px;\n            }\n            @include media('<tablet') {\n                order: 2;\n                align-self: center;\n                height: 70%;\n                width: 50%;\n                font-size: 10px;\n                display: grid;\n                justify-items: flex-end;\n                justify-self: flex-end;\n                align-items: center;\n                padding-right: 10%;\n            }\n            color: white;\n            font-size: 1vw;\n            font-weight: 500;\n            justify-self: center;\n            border: 1px solid #40BA93;\n            box-sizing: border-box;\n            border-radius: 20px;\n            background: transparent;\n            cursor: pointer;\n            &:hover {\n                transition: 0.3s all;\n                background: #40BA93;\n            }\n        }\n    }\n    &__amout-progress-bar {\n        display: grid;\n        h3 {\n            color: white;\n            font-size: 1.5vw;\n            justify-self: center;\n            align-self: center;\n            @include media('<desktop'){\n                font-size: 18px;\n            }\n            @include media('<tablet'){\n                font-size: 14px;\n            }\n        }\n        &__bar {\n            width: 60%;\n            justify-self: center;\n            @include media('<tablet'){\n                width: 90%;\n            }\n        }\n    }\n    &__body-swap {\n        position: relative;\n        display: grid;\n        grid-template-columns: 1fr 2fr 1fr;\n        align-items: flex-start;\n        animation: swapBlockAppears 1s;\n        .error-disabled {\n            position: absolute;\n            background: #000000a8;\n            width: 100%;\n            height: 100%;\n            z-index: 99999;\n            pointer-events: none;\n        }\n        @include media('<desktop') {\n            grid-template-columns: 1fr 3fr 1fr;\n        }\n        @include media('<tablet') {\n            grid-template-columns: 1fr 1fr;\n            grid-template-rows: 1fr 1fr;\n        }\n        &__token-info {\n\n            background: linear-gradient(90.99deg, #1D1D1D 2.18%, #232323 104.4%);\n            border-radius: 40px; \n            justify-self: flex-start;\n            width: 85%;\n            height: 90%;\n            @include media(\"<desktop\") {\n                width: 100%;\n                height: 70%;\n                border-radius: 25px;\n            }\n            @include media('<tablet') {\n                order: 2;\n                height: 95%;\n                width: 90%;\n            }\n            box-sizing: border-box;\n            padding: 10% 7.5%;\n            display: grid;\n            grid-template-rows: repeat(6, 1fr);\n            grid-row-gap: 5px;\n            span {\n                display: grid;\n                grid-template-columns: auto auto;\n                align-items: center;\n                font-size: 0.75vw;\n                color: #4F4F4F;\n                border-bottom: 1px solid #4F4F4F;\n                @include media('<tablet') {\n                    font-size: 6px;\n                }\n                &:first-child {\n                    color: white;\n                }\n                &:last-child {\n                    border-bottom: none;\n                }\n                b {\n                    color: white;\n                    justify-self: flex-end;\n                    a {\n                        color: white;\n                        i {\n                            color: #40BA93;\n                        }\n                    }\n                }\n            }\n        }\n        &__token-swap {\n            position: relative;\n            background: radial-gradient(61.16% 3404.86% at 48.28% 79.61%, rgba(30, 117, 89, 0.3) 0%, rgba(9, 33, 25, 0.3) 100%), linear-gradient(90.99deg, #272727 2.18%, #1C1C1C 104.4%);\n            box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.25);\n            border-radius: 40px;\n            width: 95%;\n            height: 90%;\n            h1 {\n                justify-self: center;\n                color:  white;\n                font-size: 1.75vw;\n                align-self: center;\n                @include media('<tablet') {\n                    font-size: 14px;\n                }\n            }\n            h3 {\n                justify-self: center;\n                color:  white;\n                font-size: 1.5vw;\n                align-self: flex-start;\n                @include media('<tablet') {\n                    font-size: 12px;\n                }\n            }\n            @include media(\"<desktop\") {\n                height: 70%;\n                border-radius: 25px;\n            }\n            @include media('<tablet') {\n                order: 1;\n                grid-column: 1/3;\n                height: 90%;\n            }\n            justify-self: center;\n            display: grid;\n            // grid-template-rows: 2fr 1fr 2fr 1fr;\n            grid-template-rows: 1fr 1fr;\n            box-sizing: border-box;\n            padding: 6% 7%;\n            .disabled {\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                background: radial-gradient(61.16% 3404.86% at 48.28% 79.61%, rgba(30, 117, 89, 0.3) 0%, rgba(9, 33, 25, 0.3) 100%), linear-gradient(90.99deg, #272727 2.18%, #1C1C1C 104.4%);\n                z-index: 99999;\n                display: grid;\n                grid-template-columns: 1fr;\n                grid-row-gap: 10%;\n                h1 {\n                    color: white;\n                    @include media('<tablet') {\n                        font-size: 14px;\n                    }\n                    font-size: 1.75vw;\n                    font-weight: 700s;\n                    justify-self: center;\n                    &:first-child {\n                        align-self: flex-end;\n                    }\n                    &:last-child {\n                        align-self: flex-start;\n                    }\n                }\n            }\n            div {\n                height: 94%;\n                background: #1E1E1E;\n                border-radius: 40px;\n                @include media(\"<desktop\") {\n                    border-radius: 25px;\n                }\n                @include media('<tablet') {\n                    border-radius: 25px;\n                }\n                display: grid;\n                grid-template-columns: 2fr 1fr;\n                box-sizing: border-box;\n                padding: 4% 7%;\n                p {\n                    font-size: 1.25vw;\n                    color: #828282;\n                    align-self: flex-start;\n                    grid-column: 1/3;\n                }\n                input {\n                    background: transparent;\n                    border: 1px solid transparent;\n                    @include media('<tablet') {\n                        font-size: 12px;\n                    }\n                    font-size: 2vw;\n                    color: white;\n                    &:focus {\n                        outline: none;\n                    }\n                    &::placeholder {\n                        color: white;\n                        font-size: 2vw;\n                    }\n                }\n                span {\n                    display: grid;\n                    grid-template-columns: 1fr 2fr;\n                    grid-column-gap: 10px;\n                    align-items: center;\n                    font-size: 2vw;\n                    color: white;\n                    @include media('<tablet') {\n                        font-size: 14px;\n                    }\n                    img {\n                        width: 65%;\n                        height: 65%;\n                        justify-self: flex-end;\n                    }\n                }\n            }\n\n\n\n            button {\n                align-self: flex-end;\n                height: 70%;\n                background: #40BA93;\n                border: 3px solid #40BA93;\n                box-shadow: -6px -6px 30px rgba(51, 51, 51, 0.25), 4px 4px 20px rgba(0, 0, 0, 0.25);\n                border-radius: 20px;\n                font-weight: 500;\n                font-size: 2vw;\n                @include media('<tablet') {\n                    font-size: 14px;\n                }\n                color: white;\n                cursor: pointer;\n                &:hover {\n                    transition: 0.3s all;\n                    background: transparent;\n                }\n            }\n        }\n        &__sale-details {\n            background: linear-gradient(90.99deg, #1D1D1D 2.18%, #232323 104.4%);\n            border-radius: 40px; \n            justify-self: flex-end;\n            width: 85%;\n            height: 90%;\n            @include media(\"<desktop\") {\n                height: 70%;\n                border-radius: 25px;\n                width: 100%;\n            }\n            @include media('<tablet') {\n                height: 95%;\n                width: 90%;\n                order: 3;\n                justify-self: flex-start;\n\n            }\n            box-sizing: border-box;\n            padding: 10% 7.5%;\n            display: grid;\n            grid-template-rows: repeat(7, 1fr);\n            grid-row-gap: 5px;\n            span {\n                display: grid;\n                grid-template-columns: auto auto;\n                align-items: center;\n                font-size: 0.75vw;\n                @include media('<tablet') {\n                    font-size: 6px;\n                }\n                color: #4F4F4F;\n                border-bottom: 1px solid #4F4F4F;\n                &:first-child {\n                    color: white;\n                }\n                &:last-child {\n                    border-bottom: none;\n                }\n                b {\n                    color: white;\n                    justify-self: flex-end;\n                    a {\n                        color: white;\n                        i {\n                            color: #40BA93;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    &__bottom-sec {\n        display: grid;\n        grid-template-columns: 1fr 2fr 1fr;\n        @include media('<desktop'){\n            grid-template-columns: 1fr 3fr 1fr;\n        }\n        @include media('<tablet'){\n            grid-template-columns: 1fr 1fr;\n            grid-template-rows: 3fr 1fr;\n        }\n        &__copyright {\n\n        \n            display: grid;\n            grid-template-rows: 6fr 1fr;\n            @include media('<desktop'){\n                grid-template-rows: 80% 20%;\n            }\n            @include media('<tablet'){\n                order: 2;\n            }\n            p {\n                font-size: 1vw;\n                @include media('<tablet'){\n                    font-size: 8px;\n                }\n                font-weight: 400;\n                color: #828282;\n                align-self: flex-end;\n                img {\n                    width: 18px;\n                    height: 17px;\n                }\n            }\n        }\n        &__note-block {\n\n            background: radial-gradient(61.16% 3404.86% at 48.28% 79.61%, rgba(30, 117, 89, 0.3) 0%, rgba(9, 33, 25, 0.3) 100%), linear-gradient(90.99deg, #272727 2.18%, #1C1C1C 104.4%);\n            box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.25);\n            border-radius: 40px;\n            width: 95%;\n            height: 100%;\n            animation: noteAppear 1.25s;\n            @include media('<desktop'){\n                height: 60%;\n                align-self: flex-start;\n                font-size: 8px;\n                border-radius: 25px;\n            }\n            @include media('<tablet'){\n                order: 1;\n                grid-column: 1/3;\n                height: 80%;\n                align-self: center;\n                font-size: 7px;\n                grid-template-rows: 10% 20% 20% 50%;\n\n            }\n            box-sizing: border-box;\n            padding: 6% 7%;\n            font-size: 0.75vw;\n            color: white;\n            justify-self: center;\n            align-self: flex-end;\n            display: grid;\n            grid-row-gap: 5%;\n            grid-template-rows: 20% 20% 20% 40%;\n            align-items: center;\n        }\n\n        &__social-medias {\n            display: grid;\n            align-items: flex-end;\n            justify-items: center;\n            @include media('<tablet'){\n                order: 3;\n            }\n            div {\n                width: 70%;\n                display: grid;\n                grid-template-columns: repeat(6, 1fr);\n                justify-items: center;\n                grid-column-gap: 10px;\n                a {\n                    color: #a3a5a4;\n                    font-size: 1vw;\n                    @include media('<desktop'){\n                     font-size: 15px;\n                    }\n                    &:hover {\n                        transition: 0.3s;\n                        color: white;\n                    }\n                }\n            }\n        }\n    }\n}\n@keyframes noteAppear {\n    0% {\n        transform: translateY(600px);\n        opacity: 0;\n    }\n    100% {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n}\n\n@keyframes swapBlockAppears {\n    0% {\n        transform: translateY(1200px);\n        opacity: 0;\n    }\n    100% {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n}","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1366px,\n  'large': 1920px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}"]}